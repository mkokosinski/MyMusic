{"version":3,"sources":["components/Buttons/Button.js","components/Form/FileInput/PreviewPlaceholder.js","utils/fileHelpers.js","components/Form/FileInput/FileInput.js","components/Form/TextInput/TextInput.js","components/Form/SelectInput/SelectInput.js","utils/formHelpers.js","utils/objectHelpers.js","hooks/useForm.js","utils/constants.js","components/Form/validation.js","api/MainConnections.js","components/Form/Form.js","components/App.js","index.js"],"names":["Button","children","className","disabled","type","onClick","restOfProps","buttonClassNames","cx","PreviewPlaceholder","class","getImageSize","imgPath","Promise","resolve","reject","img","Image","src","onload","height","width","ratio","error","FileInput","errorMessage","name","onChange","useState","previewSrc","setPreviewSrc","handleFileChange","e","a","file","target","files","URL","createObjectURL","sizes","value","path","console","fieldClassNames","htmlFor","accept","id","alt","tabIndex","TextInput","label","otherProps","hasValue","setHasValue","useEffect","formControlClassNames","SelectInput","options","map","opt","touchAllValues","values","Object","keys","reduce","acc","cur","isCorrectNipControlSum","nip","weights","sum","i","parseInt","length","isCorrectPeselControlSum","pesel","isEmpty","obj","useForm","initialValues","validation","onSubmit","visibleErrors","setVisibleErrors","errors","setErrors","isValid","setIsValid","touched","setTouched","setValues","isSubmitting","setisSubmitting","validate","useCallback","validationErrors","handleSubmit","preventDefault","touchedFields","getVisibleErrors","handleBlur","prev","handleChange","propTypes","PropTypes","shape","func","isRequired","CONTRACTOR_TYPE","contractorTypesOptions","contractorValidation","surname","trim","match","month","substring","day","validatePesel","validateNip","createContractor","data","url","body","formData","FormData","forEach","key","append","fetch","method","then","res","json","catch","err","Form","serverErrors","setServerErrors","restValues","dataToSend","idNumber","log","onBlur","maxLength","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07a9ceb3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport './Buttons.scss';\r\n\r\nconst Button = ({\r\n  children,\r\n  className,\r\n  disabled,\r\n  type,\r\n  onClick,\r\n  ...restOfProps\r\n}) => {\r\n  const buttonClassNames = cx('button', {\r\n    'button--disabled': disabled,\r\n    [className]: className,\r\n  });\r\n  return (\r\n    <button\r\n      className={buttonClassNames}\r\n      type={type}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      {...restOfProps}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.node,\r\n  disabled: PropTypes.bool,\r\n  type: PropTypes.oneOf(['submit', 'reset', 'button']),\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst PreviewPlaceholder = () => {\r\n  return (\r\n    <div className='fileField__placeholder'>\r\n      <span class='material-icons-outlined'>upload_file</span>\r\n      <div>Format JPG/JPEG</div>\r\n      <div>Proporcje 1:1 (kwadrat)</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewPlaceholder;\r\n","export const getImageSize = (imgPath) =>\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n      const img = new Image();\r\n      img.src = imgPath;\r\n      img.onload = () => {\r\n        const { height, width } = img;\r\n        const ratio = width / height;\r\n        resolve({\r\n          ratio,\r\n          height,\r\n          width,\r\n        });\r\n      };\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport PreviewPlaceholder from './PreviewPlaceholder';\r\nimport Button from '../../Buttons/Button';\r\nimport { getImageSize } from '../../../utils/fileHelpers';\r\nimport './FileInput.scss';\r\n\r\nconst FileInput = ({ errorMessage, name, onChange }) => {\r\n  const [previewSrc, setPreviewSrc] = useState(null);\r\n\r\n  const handleFileChange = async (e) => {\r\n    try {\r\n      const file = e.target.files[0];\r\n      const imgPath = URL.createObjectURL(file);\r\n      setPreviewSrc(imgPath);\r\n      const sizes = await getImageSize(imgPath);\r\n      onChange({\r\n        target: {\r\n          name,\r\n          value: {\r\n            file,\r\n            path: imgPath,\r\n            sizes,\r\n          },\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error('Image upload error', error);\r\n    }\r\n  };\r\n\r\n  const fieldClassNames = cx('fileField', {\r\n    'fileField--hasError': errorMessage,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={fieldClassNames}>\r\n        <label className='fileField__label' htmlFor={name}>\r\n          <input\r\n            className='fileField__input'\r\n            accept='image/jpeg'\r\n            type='file'\r\n            name={name}\r\n            id={name}\r\n            onChange={handleFileChange}\r\n          />\r\n\r\n          <div className='fileField__preview'>\r\n            {previewSrc ? (\r\n              <img src={previewSrc} alt='Uploaded img preview' />\r\n            ) : (\r\n              <PreviewPlaceholder />\r\n            )}\r\n          </div>\r\n\r\n          <Button tabIndex='-1' className={`button--light fileField__button`}>\r\n            <span>{previewSrc ? `Zmień zdjęcie` : `Dodaj zdjęcie`}</span>\r\n          </Button>\r\n        </label>\r\n      </div>\r\n      <div className='error formControl__errorMessage fileField__errorMessage'>\r\n        {errorMessage}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFileInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  errorMessage: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FileInput;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\n\r\nconst TextInput = ({\r\n  errorMessage,\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  ...otherProps\r\n}) => {\r\n  const [hasValue, setHasValue] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setHasValue(!!value);\r\n  }, [value]);\r\n\r\n  const formControlClassNames = cx('formControl', {\r\n    'formControl--hasValue': hasValue,\r\n    'formControl--hasError': errorMessage,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={formControlClassNames}>\r\n        <input\r\n          className='formControl__input'\r\n          type='text'\r\n          id={name}\r\n          name={name}\r\n          onChange={onChange}\r\n          value={value}\r\n          {...otherProps}\r\n        />\r\n        <span className='formControl__label'>\r\n          <label htmlFor={name}>{label}</label>\r\n        </span>\r\n        <div className='error formControl__errorMessage'>{errorMessage}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  errorMessage: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\n\r\nconst SelectInput = ({\r\n  errorMessage,\r\n  label,\r\n  name,\r\n  value,\r\n  options,\r\n  onChange,\r\n}) => {\r\n  const [hasValue, setHasValue] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setHasValue(!!value);\r\n  }, [value]);\r\n\r\n  const formControlClassNames = cx('formControl', {\r\n    'formControl--hasValue': hasValue,\r\n    'formControl--hasError': errorMessage,\r\n  });\r\n  return (\r\n    <div className={formControlClassNames}>\r\n      <select name={name} className='formControl__input' onChange={onChange}>\r\n        {options?.map((opt) => (\r\n          <option key={opt.value} value={opt.value}>\r\n            {opt.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <span className='formControl__label'>\r\n        <label htmlFor={name}>{label}</label>\r\n      </span>\r\n      <div className='error formControl__errorMessage'>{errorMessage}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      value: PropTypes.any,\r\n    }),\r\n  ),\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SelectInput;\r\n","export const getVisibleErrors = (errors, touchedFields) =>\r\n  Object.keys(errors).reduce(\r\n    (acc, cur) => (touchedFields[cur] ? { ...acc, [cur]: errors[cur] } : acc),\r\n    {},\r\n  );\r\n\r\nexport const touchAllValues = (values) =>\r\n  Object.keys(values).reduce((acc, cur) => ({ ...acc, [cur]: true }), {});\r\n\r\nexport const validateNip = (nip) => {\r\n  if (!nip.match(/^[0-9]{10}$/)) {\r\n    return false;\r\n  }\r\n  const nipWeights = [6, 5, 7, 2, 3, 4, 5, 6, 7];\r\n  return isCorrectNipControlSum(nip, nipWeights);\r\n};\r\n\r\nconst isCorrectNipControlSum = (nip, weights) => {\r\n  const sum = weights.reduce((acc, cur, i) => acc + parseInt(nip[i]) * cur, 0);\r\n\r\n  if (sum === 0) {\r\n    return false;\r\n  }\r\n\r\n  const controlSum = sum % 11 === 10 ? 0 : sum % 11;\r\n  return controlSum === parseInt(nip[weights.length]);\r\n};\r\n\r\nexport const validatePesel = (pesel) => {\r\n  if (!pesel.match(/^[0-9]{11}$/)) {\r\n    return false;\r\n  }\r\n\r\n  const month = parseInt(pesel.substring(2, 4));\r\n  if (!month || month % 20 > 12) {\r\n    return false;\r\n  }\r\n\r\n  const day = parseInt(pesel.substring(4, 6));\r\n  if (!day || day < 1 || day > 31) {\r\n    return false;\r\n  }\r\n\r\n  const peselWeights = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3];\r\n  return isCorrectPeselControlSum(pesel, peselWeights);\r\n};\r\n\r\nconst isCorrectPeselControlSum = (pesel, weights) => {\r\n  const sum = weights.reduce((acc, cur, i) => {\r\n    const currentValue = parseInt(pesel[i]) * cur;\r\n    return acc + (currentValue % 10);\r\n  }, 0);\r\n\r\n  if (sum === 0) {\r\n    return false;\r\n  }\r\n\r\n  const controlSum = 10 - (sum % 10);\r\n  return controlSum === parseInt(pesel[weights.length]);\r\n};\r\n","export const isEmpty = (obj) => obj == null || Object.keys(obj).length === 0;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getVisibleErrors, touchAllValues } from '../utils/formHelpers';\r\nimport { isEmpty } from '../utils/objectHelpers';\r\n\r\nexport const useForm = ({ initialValues, validation, onSubmit }) => {\r\n  const [visibleErrors, setVisibleErrors] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [touched, setTouched] = useState({});\r\n  const [values, setValues] = useState(initialValues);\r\n  const [isSubmitting, setisSubmitting] = useState(false);\r\n\r\n  const validate = useCallback(() => {\r\n    const validationErrors = validation(values);\r\n    setErrors(validationErrors);\r\n\r\n    if (isEmpty(validationErrors)) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  }, [validation, values]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    const { name } = e.target;\r\n    setTouched((prev) => ({ ...prev, [name]: true }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      setTouched(touchAllValues(values));\r\n      if (!isValid || isSubmitting) {\r\n        return;\r\n      }\r\n      setisSubmitting(true);\r\n      await onSubmit(values);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setisSubmitting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  }, [validate]);\r\n\r\n  useEffect(() => {\r\n    setVisibleErrors(getVisibleErrors(errors, touched));\r\n  }, [errors, touched]);\r\n\r\n  return {\r\n    errors: visibleErrors,\r\n    isSubmitting,\r\n    isValid,\r\n    values,\r\n    touched,\r\n    handleBlur,\r\n    handleChange,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nuseForm.propTypes = {\r\n  initialValues: PropTypes.shape({}),\r\n  validation: PropTypes.func,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","export const CONTRACTOR_TYPE = {\r\n  PERSON: 'person',\r\n  COMPANY: 'company',\r\n};\r\n\r\nexport const contractorTypesOptions = [\r\n  {\r\n    label: 'Osoba',\r\n    value: CONTRACTOR_TYPE.PERSON,\r\n  },\r\n  {\r\n    label: 'Firma',\r\n    value: CONTRACTOR_TYPE.COMPANY,\r\n  },\r\n];\r\n","import { CONTRACTOR_TYPE } from '../../utils/constants';\r\nimport { validateNip, validatePesel } from '../../utils/formHelpers';\r\nimport { isEmpty } from '../../utils/objectHelpers';\r\n\r\nexport const contractorValidation = (values) => {\r\n  const { img, name, surname, type, pesel, nip } = values;\r\n  const errors = {};\r\n  if (isEmpty(img)) {\r\n    errors.img = 'Zdjęcie jest wymagane';\r\n  } else if (img.sizes.ratio !== 1) {\r\n    errors.img = `Zdjęcie musi mieć propocje 1:1.\\n Wymiary przesłanego zdjęcia: ${img.sizes.width}px x ${img.sizes.height}px`;\r\n  }\r\n\r\n  if (!name || !name.trim()) {\r\n    errors.name = 'Imię jest wymagane';\r\n  }\r\n\r\n  if (!surname || !surname.trim()) {\r\n    errors.surname = 'Nazwisko jest wymagane';\r\n  }\r\n\r\n  if (!type || !type.trim()) {\r\n    errors.type = 'Typ jest wymagany';\r\n  }\r\n\r\n  if (type === CONTRACTOR_TYPE.PERSON) {\r\n    if (!pesel || !pesel.trim()) {\r\n      errors.pesel = 'PESEL jest wymagany';\r\n    } else if (!validatePesel(pesel)) {\r\n      errors.pesel = 'Niepoprawny numer PESEL';\r\n    }\r\n  }\r\n\r\n  if (type === CONTRACTOR_TYPE.COMPANY) {\r\n    if (!nip || !nip.trim()) {\r\n      errors.nip = 'NIP jest wymagany';\r\n    } else if (!validateNip(nip)) {\r\n      errors.nip = 'Niepoprawny numer NIP';\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n","const baseUrl = 'https://localhost:60001/';\r\n\r\nconst post = (url, body) =>\r\n  new Promise((resolve, reject) => {\r\n    try {\r\n      const formData = new FormData();\r\n      Object.keys(body).forEach((key) => {\r\n        formData.append(key, body[key]);\r\n      });\r\n\r\n      fetch(url, {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n        .then((res) => {\r\n          res.json();\r\n        })\r\n        .then((json) => {\r\n          resolve(json);\r\n        })\r\n        .catch((err) => {\r\n          reject('Nie znaleziono metody zapisu');\r\n        });\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n\r\nexport const createContractor = (data) => {\r\n  const endpoint = 'Contractor/Save';\r\n  return post(`${baseUrl}${endpoint}`, data);\r\n};\r\n","import React, { useState } from 'react';\r\nimport Button from '../Buttons/Button';\r\nimport FileInput from './FileInput/FileInput';\r\nimport TextInput from './TextInput/TextInput';\r\nimport SelectInput from './SelectInput/SelectInput';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { contractorValidation } from './validation';\r\nimport { createContractor } from '../../api/MainConnections';\r\nimport { contractorTypesOptions, CONTRACTOR_TYPE } from '../../utils/constants';\r\nimport './Form.scss';\r\n\r\nconst initialValues = {\r\n  img: '',\r\n  name: '',\r\n  surname: '',\r\n  type: CONTRACTOR_TYPE.PERSON,\r\n  pesel: '',\r\n  nip: '',\r\n};\r\n\r\nconst Form = () => {\r\n  const [serverErrors, setServerErrors] = useState(null);\r\n\r\n  const onSubmit = async (values) => {\r\n    const { img, nip, pesel, ...restValues } = values;\r\n    const dataToSend = {\r\n      ...restValues,\r\n      img: img.file,\r\n      idNumber: values.type === CONTRACTOR_TYPE.COMPANY ? nip : pesel,\r\n    };\r\n    setServerErrors(null);\r\n    await createContractor(dataToSend).catch((err) => setServerErrors(err));\r\n    console.log('end');\r\n  };\r\n\r\n  const {\r\n    errors,\r\n    isSubmitting,\r\n    values,\r\n    handleBlur,\r\n    handleChange,\r\n    handleSubmit,\r\n  } = useForm({\r\n    initialValues,\r\n    onSubmit,\r\n    validation: contractorValidation,\r\n  });\r\n\r\n  return (\r\n    <form className='form' onSubmit={handleSubmit}>\r\n      <fieldset className='form__fieldset' disabled={isSubmitting}>\r\n        <div className='form__file'>\r\n          <FileInput\r\n            name='img'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.img}\r\n            errorMessage={errors.img}\r\n          />\r\n        </div>\r\n\r\n        <div className='form__inputs'>\r\n          <TextInput\r\n            label='Imię'\r\n            name='name'\r\n            type='text'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.name}\r\n            errorMessage={errors.name}\r\n          />\r\n\r\n          <TextInput\r\n            name='surname'\r\n            label='Nazwisko'\r\n            type='text'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.surname}\r\n            errorMessage={errors.surname}\r\n          />\r\n\r\n          <SelectInput\r\n            name='type'\r\n            label='Typ'\r\n            options={contractorTypesOptions}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.type}\r\n            errorMessage={errors.type}\r\n          />\r\n\r\n          {values.type === 'person' ? (\r\n            <TextInput\r\n              id='pesel'\r\n              name='pesel'\r\n              label='PESEL'\r\n              type='text'\r\n              maxLength='11'\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.pesel}\r\n              errorMessage={errors.pesel}\r\n            />\r\n          ) : (\r\n            <TextInput\r\n              id='nip'\r\n              name='nip'\r\n              label='Numer NIP'\r\n              type='text'\r\n              maxLength='10'\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.nip}\r\n              errorMessage={errors.nip}\r\n            />\r\n          )}\r\n        </div>\r\n      </fieldset>\r\n      <Button\r\n        className='button--submit form__button'\r\n        type='submit'\r\n        disabled={isSubmitting}\r\n      >\r\n        Wyślij\r\n        {isSubmitting && (\r\n          <span class='form__spinner material-icons-outlined'>sync</span>\r\n        )}\r\n      </Button>\r\n\r\n      {serverErrors && (\r\n        <div className='error form__errorMessage '>{serverErrors}</div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import Form from './Form/Form';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './scss/index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}